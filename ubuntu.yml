---
- name: Preparing Workstation
  hosts: localhost
  connection: local
  tasks:
    - name: Installing Linux Apps
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - vim
          - htop
          - curl
          - wget
          - ncdu
          - tree
          - apt-transport-https
          - ca-certificates
          - gnupg
          - python3-pip
          - make
          - git
          - bash-completion
          - gnupg-agent
          - zsh
          - flameshot
          - fonts-hack
          - virtualbox
          - mlocate
          - jq
          - mtr
          - snapd
          - gedit
          - gdebi
          - clang
          - cmake
          - ninja-build
          - pkg-config
          - libgtk-3-dev
          - liblzma-dev

    - name: Installing Snap Apps
      become: true
      snap:
        name:
          - beekeeper-studio
          - figma-linux
          - drawio
          - insomnia
          - kdenlive
          - remmina
          - sqlitebrowser
          - audacity
          - obs-studio
    
    - name: Installing Snap Flutter
      become: true
      snap:
        name: flutter
        classic: yes
    
    - name: Installing Snap VSCode
      become: true
      snap:
        name: code
        classic: yes

    - block:
      - name: Verify if Oh-My-zsh is installed
        command: test -d /home/{{ ansible_user_id }}/.oh-my-zsh
        register: ohmyzsh
        ignore_errors: true
      - name: Installing Oh-My-zsh
        shell:
          cmd: 'curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash'
          warn: false
        when: ohmyzsh.rc != 0
      - name: Changing Default Shell to ZSH
        become: yes
        user: 
          name: '{{ ansible_user_id }}'
          shell: /bin/zsh 
      - name: Changing Default ZSH Theme to Bira
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="bira"'
      - name: Creating ZSH Completion folder
        file:
          path: /home/{{ ansible_user_id }}/.oh-my-zsh/completions
          state: directory
          mode: 0755
      - name: Adding autoload to compinit
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          line: 'autoload -U compinit && compinit'
          state: present

    - name: Installing AWS CLI via pip3
      become: true
      pip:
        name: awscli
        executable: pip3

    - block:
      - name: Install Google Key
        become: true
        apt_key: 
          url: 'https://dl.google.com/linux/linux_signing_key.pub'
          state: present
      - name: Install Google Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
          state: present
          filename: google-chrome
      - name: Install Google Chrome
        become: true
        apt:
          name: google-chrome-stable

    - block:
      - name: Installing Vagrant 2.2.18
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vagrant/2.2.18/vagrant_2.2.18_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes

    - block:
      - name: Install Google Cloud SDK Key
        become: true
        apt_key:
          url: 'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
          state: present
      - name: Install Google Cloud SDK Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.cloud.google.com/apt cloud-sdk main'
          state: present
          filename: google-cloud-sdk
      - name: Install Google Cloud SDK
        become: true
        apt:
          name: google-cloud-sdk

    - block: 
      - name: Install aptitude
        become: true
        apt:
          name: aptitude
          state: latest
          update_cache: true

      - name: Install required system packages
        become: true
        apt:
          pkg:
            - software-properties-common
            - virtualenv
            - python3-setuptools
          state: latest
          update_cache: true

      - name: Add Docker GPG apt Key
        become: true
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present

      - name: Add Docker Repository
        become: true
        apt_repository:
          repo: deb https://download.docker.com/linux/ubuntu focal stable
          state: present

      - name: Update apt and install docker-ce
        become: true
        apt:
          name: docker-ce
          state: latest
          update_cache: true

      - name: Install Docker Module for Python
        become: true
        pip:
          name: docker

